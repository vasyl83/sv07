
#To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# See docs/Config_Reference.md for a description of parameters.

[include KAMP_Settings.cfg]
[include timelapse.cfg]
[include mainsail.cfg]
[include shell_command.cfg]

[save_variables]
filename: ~/printer_data/config/saved_variables.cfg

[exclude_object]

[firmware_retraction]
retract_length: 0.5
retract_speed: 60
unretract_speed: 60

[gcode_arcs]
resolution: 1.0 

[mcu]
serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 8000
#max_accel_to_decel:3000
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity:3.0

[virtual_sdcard] 
path:/home/mks/printer_data/gcodes

[pause_resume]

[display_status]

[idle_timeout]
gcode:
    {% if printer.pause_resume.is_paused %}
    M104 S0# Set Hot-end to 0C (off)
    RESPOND PREFIX=tgalarm MSG="Print is paused - Idle timeout disabled"
    M117 "Print is paused - Idle timeout disabled"
    {% else %}
    TURN_OFF_HEATERS
    M84
    {% endif %}
timeout: 900

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
spi_bus: spidev0.0

[verify_heater extruder]
max_error: 60
check_gain_time:20
hysteresis: 5
heating_gain: 2

[verify_heater heater_bed]
max_error: 180
check_gain_time:120
hysteresis: 5
heating_gain: 2

[resonance_tester]
accel_chip: adxl345
probe_points:
    115, 115, 20  # an example
accel_per_hz:50
min_freq:1
max_freq:50
max_smoothing:0.2
hz_per_sec:0.5

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "error!"
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#############################################################################################################
#GCODE_MACRO
#############################################################################################################
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 60.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 60.0  ; unretract speed in mm/s
variable_speed_hop        : 40.0  ; z move speed in mm/s
variable_speed_move       : 230.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 900     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "my_sensor"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
gcode:

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    RESPOND TYPE=echo MSG="Cancel Print Success!"
    G91 ;Relative positionning
    G1 E-2 F500 ;Retract a bit
    G1 E-2 Z0.2 F200 ;Retract and raise Z
    G1 Z1 ;Raise Z more
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    G90
    G1 X10 Y210 F6000
    M84 X Y E ;Disable all steppers but Z

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %} ; parse BED_TEMP parameter from start gcode of slicer if not set, set it to 60C
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %} ; parse EXTRUDER_TEMP parameter from start gcode of slicer if not set, set it to 200C
    {% set min_ext = EXTRUDER_TEMP-5 %} ; set min limit of EXTRUDER_TEMP
    {% set max_ext = EXTRUDER_TEMP+5 %} ; set max limit of EXTRUDER_TEMP
    {% set min_bed = BED_TEMP-3 %} ; set min limit of BED_TEMP
    {% set max_bed = BED_TEMP+5 %} ; set max limit of BED_TEMP
    M84 E ; Disable E Motor for probe accuracy on direct drive systems
    G90 ;Absolute positioning
    G28 ; home all axes
    RESPOND TYPE=echo MSG="SV07: Preheating nozzle to 150C"
    M104 S150 T0 ; Preheat nozzle to 150 and not wait.
    RESPOND TYPE=echo MSG="SV07: Fully heating the bed to desired temperature."
    M140 S{BED_TEMP}  ; Heat bed to temp, and wait in the next line:
    TEMPERATURE_WAIT SENSOR=heater_bed minimum={min_bed} maximum={max_bed} ; wait untill bed reaches one of the defined limits
    RESPOND TYPE=echo MSG="SV07: Running z-tilt calibration"
    Z_TILT_ADJUST ; run z-tilt calibration
    RESPOND TYPE=echo MSG="SV07: Creating adaptive bed mesh"
    BED_MESH_CLEAR ; clear any active bed meches
    BED_MESH_CALIBRATE ; run KAMP adaptive bed mesh calibration
    BED_MESH_PROFILE LOAD=default ; since the profile is not loaded by default, we explicitly call it
    RESPOND TYPE=echo MSG="SV07: Finishing heating the nozzle"
    M104 S{EXTRUDER_TEMP} T0 ; Finish heating the extruder to temp
    TEMPERATURE_WAIT SENSOR=extruder minimum={min_ext} maximum={max_ext} ; wait untill extruder reaches one of the defined limits
    RESPOND TYPE=echo MSG="SV07: Purging filament"
    LINE_PURGE ; run KAMP adaptive line purge

    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    RESPOND TYPE=echo MSG="SV07: Print Starting"

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    RESPOND TYPE=echo MSG="Pause Print!"
    ##### set defaults #####
    {% set x = params.X|default(10) %}      #edit to your park position
    {% set y = params.Y|default(210) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F500
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]  
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    RESPOND TYPE=echo MSG="RESUME Print!"
    ##### set defaults #####
    {% if printer["filament_switch_sensor my_sensor"].filament_detected == True %} # detect if occur filament runout ,True : filament exists. Â False:filament runout
        RESPOND TYPE=echo MSG="RESUME Print!"
        {% set e = params.E|default(1) %} #edit to your retract length
      #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
      ##### end of definitions #####
      G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
          G1 E{e} F400
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %} 
            RESUME_BASE {get_params}
    {% else %}
        RESPOND TYPE=echo MSG="Please Insert filament in Sensor!"
    {% endif %} 

[gcode_macro END_PRINT]
gcode:
    G91 ;Relative positionning
    G1 E-2 F500 ;Retract a bit
    G1 E-2 Z0.2 F200 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z1 ;Raise Z more
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    G90 ;Absolute positionning
    G1 X10 Y210 ;Present print

    M84 X Y E ;Disable all steppers but Z
    RESPOND TYPE=echo MSG="Finish Print!"

[gcode_macro LOAD_FILAMENT]
gcode:
    G91 
    G1 E30 F300
    G1 E10 F150
    G90

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-30 F300
    G90

[gcode_macro LED_ON]
gcode:
    SET_PIN PIN=my_led VALUE=1

[gcode_macro LED_OFF]
gcode:
    SET_PIN PIN=my_led VALUE=0

[gcode_macro M106]
rename_existing: M106.1
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}
    
[gcode_macro M205]
gcode:
    M105
[gcode_macro M0]
gcode:
  PAUSE

[gcode_macro M900]
gcode:

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

#############################################################################################################
#stepper,TMC2209
#############################################################################################################
[stepper_x]
step_pin: PD15
dir_pin: PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x: virtual_endstop 
homing_retract_dist: 0
position_endstop: -16
position_min: -16
position_max: 225
homing_speed: 80
step_pulse_duration:0.000004

[tmc2209 stepper_x]
uart_pin:PE3
run_current:1.2
uart_address:3
interpolate: True
driver_sgthrs: 115
stealthchop_threshold:0
stealthchop_threshold: 999999
diag_pin: ^PD10 

[stepper_y]
step_pin: PB7
dir_pin: PB6
enable_pin: !PB9
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y: virtual_endstop 
homing_retract_dist: 0
position_endstop: -2
position_min: -2
position_max: 225
homing_speed: 60
step_pulse_duration:0.000004

[tmc2209 stepper_y]
uart_pin:PE4
run_current:1.2
uart_address:3
interpolate: True
driver_sgthrs: 105
stealthchop_threshold:0
stealthchop_threshold: 999999
diag_pin: ^PE0 

[stepper_z]
step_pin: PB3
dir_pin: !PD7
enable_pin: !PB5
microsteps: 16
rotation_distance: 8
endstop_pin:probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 253
position_min: -4
homing_speed:10

[stepper_z1]
step_pin: PA7
dir_pin: !PA6
enable_pin: !PC5
microsteps: 16
rotation_distance: 8
endstop_pin:probe:z_virtual_endstop
#position_endstop: 0.0

[extruder]
step_pin: PD1
dir_pin: !PD0
enable_pin: !PD4
microsteps: 16
rotation_distance: 4.59
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4
control: pid
pressure_advance:0.02
pressure_advance_smooth_time:0.035
max_extrude_cross_section:500
instantaneous_corner_velocity:10
max_extrude_only_distance: 150.0
max_extrude_only_velocity:2000
max_extrude_only_accel:10000
pid_Kp=24.522 
pid_Ki=1.397 
pid_Kd=107.590
min_temp: 0
max_temp: 305
min_extrude_temp: 150

[tmc2209 extruder]
uart_pin: PE7
run_current: 0.6
uart_address:3
#hold_current: 0.5
interpolate: True

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA3
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 105

[probe]
pin:PD13
x_offset:27
y_offset:-20
samples_tolerance: 0.01
samples_tolerance_retries: 3 
samples_result: average         
samples: 2     

# [filament_switch_sensor my_sensor]
# #pause_on_runout: True
# # runout_gcode:
# #     RESPOND TYPE=error MSG="Filament Runout! Please change filament!"
# #event_delay: 3.0
# #pause_delay: 0.5
# switch_pin:PD11

[filament_switch_sensor my_sensor]
switch_pin: PB15
pause_on_runout: False
runout_gcode:
  PAUSE #[pause_resume] is required in printer.cfg
  RESPOND TYPE=error MSG="No filament was detected!"
  M117 Filament runout!
insert_gcode:
  RESPOND TYPE=echo MSG="Filament was inserted"
  M117 Filament was inserted

[filament_motion_sensor encoder_sensor]
switch_pin: ^PB12
detection_length: 5
extruder: extruder
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  RESPOND TYPE=error MSG="Filament is stuck!"
insert_gcode:
  RESPOND TYPE=echo MSG="Filament was inserted"

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS clog sensor second after klipper starts
initial_duration: 3
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[safe_z_home]
home_xy_position: 83,130
speed: 230
z_hop: 5                 # Move up 5mm
z_hop_speed: 20

[temperature_sensor Main_Control_Unit] 
sensor_type: temperature_mcu

[temperature_sensor Makerbase_MKS_Pi]
sensor_type: temperature_host

#################################################
#Z stepper tilt adjustment
#################################################
[z_tilt]
z_positions: -16, 130
             180, 130
points: -16, 130
        180, 130
speed: 230
horizontal_move_z: 5
retries: 25
retry_tolerance: .003

#################################################
#bed mesh calibrate
#################################################
[bed_mesh]
speed:230                
horizontal_move_z:5   
mesh_min:11,12   
mesh_max:210,205
probe_count:7,7      
algorithm: bicubic   
bicubic_tension: 0.2
fade_start: 1.0          
fade_end: 10   
mesh_pps:2,2 
move_check_distance: 5
split_delta_z: .025

#################################################
#adjust bed screws tilt
#################################################
[screws_tilt_adjust]
screw1: -1, 45
screw1_name: front left screw
screw2: 168, 45
screw2_name: front right screw
screw3: 168, 215
screw3_name: rear right screw
screw4: -1, 215
screw4_name: rear left screw
horizontal_move_z: 5.
speed: 200.
screw_thread: CW-M4

[duplicate_pin_override] 
pins: PE9,PE13,PE11,PD3 

[heater_fan hotend_fan]
pin: PE11

[fan] 
pin: PE9 

[fan_generic fan0]
pin: PE9

# this is the auxiliary fan
# comment out it if you don't have auxiliary fan
[fan_generic fan2]
pin: PE13

[output_pin my_led]
pin:PC4
pwm: 1
value:1
cycle_time: 0.010

[controller_fan Fan_Board]
pin:PD3
fan_speed: 1.0
idle_timeout: 120
heater: heater_bed, extruder
stepper: stepper_x, stepper_y, stepper_z, stepper_z1

[input_shaper]
damping_ratio_x: 0.1
damping_ratio_y: 0.1
shaper_type_x = 2hump_ei
shaper_freq_x = 43.4
shaper_type_y = 2hump_ei
shaper_freq_y = 43.4


# # Klipper Printer Additions Start
# [include printer_additions/___module_loader.cfg]
# # Klipper Printer Additions End

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 2.129
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.700
#*# pid_ki = 1.317
#*# pid_kd = 949.154
#*# max_y = 197.05
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.186134, 0.223634, 0.274884, 0.337384, 0.364884
#*# 	  0.051134, 0.062384, 0.103634, 0.159884, 0.189884
#*# 	  -0.088866, -0.061366, -0.040116, 0.013634, 0.033634
#*# 	  -0.180116, -0.181366, -0.152616, -0.132616, -0.117616
#*# 	  -0.256366, -0.263866, -0.256366, -0.243866, -0.260116
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 57.379999999999995
#*# max_x = 162.25
#*# min_y = 61.41
#*# max_y = 158.34
